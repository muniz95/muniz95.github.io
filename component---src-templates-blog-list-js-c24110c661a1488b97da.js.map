{"version":3,"sources":["webpack:///./src/components/ListWrapper.js","webpack:///./src/components/Post/styled.js","webpack:///./src/components/Post/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["ListWrapper","styled","section","PostWrapper","media","lessThan","PostLink","AniLink","transitions","COLOR","PostTag","div","PostInfo","PostDate","time","PostTitle","h1","PostDescription","h2","Post","slug","date","timeToRead","title","description","main_class","disableCard","to","cover","direction","bg","getThemeColor","className","PaginationWrapper","Pagination","props","isFirst","prevPage","rel","currentPage","numPages","isLast","nextPage","PostListQuery","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","i","node","key","fields","frontmatter"],"mappings":"8FAAA,sCAEaA,EAFb,UAE2BC,EAAOC,QAAV,kEAAGD,CAAH,6L,+kBCIjB,IAAME,EAAcF,IAAOC,QAAV,sEAAGD,CAAH,yNAgBpBG,IAAMC,SAAS,QAAfD,CAhBoB,MAuBXE,EAAWL,YAAOM,KAAV,mEAAGN,CAAH,yJAILO,IAAYC,OAWfC,EAAUT,IAAOU,IAAV,kEAAGV,CAAH,sdAiBhBG,IAAMC,SAAS,QAAfD,CAjBgB,MAwDPQ,EAAWX,IAAOU,IAAV,mEAAGV,CAAH,8DAKjBG,IAAMC,SAAS,QAAfD,CALiB,MAURS,EAAWZ,IAAOa,KAAV,mEAAGb,CAAH,uBAIRc,EAAYd,IAAOe,GAAV,oEAAGf,CAAH,2GAWTgB,EAAkBhB,IAAOiB,GAAV,0EAAGjB,CAAH,uD,YCjFbkB,IArCF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,KACAC,EAKI,EALJA,WACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAEA,OACE,kBAAC,EAAD,CAAYC,GAAIP,EAAMQ,OAAK,EAACC,UAAU,QAAQC,GAAIC,eAChD,kBAAC,EAAD,CAAeC,UAAWN,EAAc,cAAgB,IACrDD,GACC,kBAAC,EAAD,CAAWO,UAAS,MAAQP,GAAeA,GAE7C,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGJ,EADH,IACUC,GAAU,MAAUA,EAAV,mBAEpB,kBAAC,EAAD,KAAcC,GACd,kBAAC,EAAD,KAAoBC,Q,yVCtBvB,IAAMS,EAAoBhC,IAAOC,QAAV,+EAAGD,CAAH,4OAQ1BG,IAAMC,SAAS,QAAfD,CAR0B,KAgBZI,IAAYC,OC0BfyB,EAvCI,SAAAC,GAAK,OACtB,kBAAC,EAAD,MACIA,EAAMC,SACN,kBAAC,IAAD,CACET,GAAIQ,EAAME,SACVC,IAAI,OACJV,OAAK,EACLC,UAAU,OACVC,GAAIC,eALN,qBAUF,2BACGI,EAAMI,YADT,OAC0BJ,EAAMK,WAE9BL,EAAMM,QACN,kBAAC,IAAD,CACEd,GAAIQ,EAAMO,SACVJ,IAAI,OACJV,OAAK,EACLC,UAAU,QACVC,GAAIC,eALN,sB,YCyBOY,GAFEC,UAtCE,SAAAT,GACf,IAAMU,EAAWV,EAAMW,KAAKC,kBAAkBC,MADtB,EAGUb,EAAMc,YAAhCV,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,SACfJ,EAA0B,IAAhBG,EACVE,EAASF,IAAgBC,EACzBH,EAAWE,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GAExC,OACE,kBAACW,EAAA,EAAD,KACE,kBAAC,IAAD,CAAK3B,MAAM,SACX,kBAAC,IAAD,KACGsB,EAASM,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACZ,kBAAClC,EAAA,EAAD,CACEmC,IAAKF,EACLhC,KAAMiC,EAAKE,OAAOnC,KAClBG,MAAO8B,EAAKG,YAAYjC,MACxBD,WAAY+B,EAAK/B,WACjBD,KAAMgC,EAAKG,YAAYnC,KACvBG,YAAa6B,EAAKG,YAAYhC,YAC9BC,WAAY4B,EAAKG,YAAY/B,iBAKnC,kBAAC,EAAD,CACEc,YAAaA,EACbC,SAAUA,EACVJ,QAASA,EACTK,OAAQA,EACRJ,SAAUA,EACVK,SAAUA,MAQQ","file":"component---src-templates-blog-list-js-c24110c661a1488b97da.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ListWrapper = styled.section`\n  body#card & {\n    background-color: var(--borders);\n    border-bottom: 1px solid var(--borders);\n    display: grid;\n    grid-area: card;\n    grid-gap: 1px;\n    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));\n  }\n`\n","import styled from 'styled-components'\nimport media from 'styled-media-query'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\n\nimport transitions from '../../styles/transitions';\n\nexport const PostWrapper = styled.section`\n  align-items: center;\n  border-bottom: 1px solid var(--borders);\n  display: flex;\n  padding: 2rem 3rem;\n  width: 100%;\n\n  &:not(.disableCard) {\n    body#card & {\n      border: none;\n      padding: 2rem 1rem;\n      flex-direction: column;\n      justify-content: center;\n    }\n  }\n\n  ${media.lessThan('large')`\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 2rem 1rem;\n  `}\n`\n\nexport const PostLink = styled(AniLink)`\n  color: var(--texts);\n  display: flex;\n  text-decoration: none;\n  transition: ${transitions.COLOR};\n\n  body#card & {\n    background-color: var(--background);\n  }\n\n  &:hover {\n    color: var(--highlight);\n  }\n`\n\nexport const PostTag = styled.div`\n  align-items: center;\n  background: var(--highlight);\n  border-radius: 50%;\n  color: var(--white);\n  display: flex;\n  font-size: 1.3rem;\n  font-weight: 700;\n  justify-content: center;\n  min-height: 90px;\n  min-width: 90px;\n  text-transform: uppercase;\n\n  body#card & {\n    margin-bottom: 1.5rem;\n  }\n\n  ${media.lessThan('large')`\n    border-radius: 0;\n    font-size: 1rem;\n    min-height: auto;\n    min-width: auto;\n    padding: .2rem .5rem;\n    margin-bottom: .7rem;\n  `}\n\n  &.is-js {\n    background: #d6ba32;\n    color: #000;\n  }\n\n  &.is-misc {\n    background: #47650b;\n  }\n\n  &.is-dev {\n    background: #61728f;\n  }\n\n  &.is-svg {\n    background: #7d669e;\n  }\n\n  &.is-css {\n    background: #24809e;\n  }\n\n  &.is-jekyll {\n    background: #b31917;\n  }\n\n  &.is-dart {\n    background: #025697;\n  }\n`\n\nexport const PostInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 1.5rem;\n\n  ${media.lessThan('large')`\n    margin: 0;\n  `}\n`\n\nexport const PostDate = styled.time`\n  font-size: 0.9rem;\n`\n\nexport const PostTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n\n  body#card & {\n    line-height: 1.1;\n    margin: 0.8rem 0;\n  }\n`\n\nexport const PostDescription = styled.h2`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as S from './styled'\n\nimport getThemeColor from '../../utils/getThemeColor'\n\nconst Post = ({\n  slug,\n  date,\n  timeToRead,\n  title,\n  description,\n  main_class,\n  disableCard\n}) => {\n  return (\n    <S.PostLink to={slug} cover direction=\"right\" bg={getThemeColor()}>\n      <S.PostWrapper className={disableCard ? 'disableCard' : ''}>\n        {main_class && (\n          <S.PostTag className={`is-${main_class}`}>{main_class}</S.PostTag>\n        )}\n        <S.PostInfo>\n          <S.PostDate>\n            {date} {timeToRead && ` • ${timeToRead} min de leitura`}\n          </S.PostDate>\n          <S.PostTitle>{title}</S.PostTitle>\n          <S.PostDescription>{description}</S.PostDescription>\n        </S.PostInfo>\n      </S.PostWrapper>\n    </S.PostLink>\n  )\n}\n\nPost.propTypes = {\n  slug: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired,\n  main_class: PropTypes.string,\n  disableCard: PropTypes.bool\n}\n\nexport default Post\n","import styled from 'styled-components'\nimport media from 'styled-media-query'\n\nimport transitions from '../../styles/transitions';\n\nexport const PaginationWrapper = styled.section`\n  align-items: center;\n  border-top: 1px solid var(--borders);\n  color: var(--texts);\n  display: flex;\n  padding: 1.5rem 3rem;\n  justify-content: space-between;\n\n  ${media.lessThan('large')`\n    font-size: .8rem;\n    padding: 1rem;\n  `}\n\n  a {\n    color: var(--texts);\n    text-decoration: none;\n    transition: ${transitions.COLOR};\n\n    &:hover {\n      color: var(--highlight);\n    }\n  }\n`\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport getThemeColor from '../../utils/getThemeColor'\n\nimport * as S from './styled'\n\nconst Pagination = props => (\n  <S.PaginationWrapper>\n    {!props.isFirst && (\n      <AniLink\n        to={props.prevPage}\n        rel=\"prev\"\n        cover\n        direction=\"left\"\n        bg={getThemeColor()}\n      >\n        ← Página Anterior\n      </AniLink>\n    )}\n    <p>\n      {props.currentPage} de {props.numPages}\n    </p>\n    {!props.isLast && (\n      <AniLink\n        to={props.nextPage}\n        rel=\"next\"\n        cover\n        direction=\"right\"\n        bg={getThemeColor()}\n      >\n        Próxima Página →\n      </AniLink>\n    )}\n  </S.PaginationWrapper>\n)\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string.isRequired,\n  nextPage: propTypes.string.isRequired\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout/'\nimport SEO from '../components/Seo'\nimport Post from '../components/Post'\nimport Pagination from '../components/Pagination'\n\nimport * as S from '../components/ListWrapper'\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <S.ListWrapper>\n        {postList.map(({ node }, i) => (\n          <Post\n            key={i}\n            slug={node.fields.slug}\n            title={node.frontmatter.title}\n            timeToRead={node.timeToRead}\n            date={node.frontmatter.date}\n            description={node.frontmatter.description}\n            main_class={node.frontmatter.main_class}\n          />\n        ))}\n      </S.ListWrapper>\n\n      <Pagination\n        currentPage={currentPage}\n        numPages={numPages}\n        isFirst={isFirst}\n        isLast={isLast}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const PostListQuery = graphql`\n  query PostListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            description\n            main_class\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}